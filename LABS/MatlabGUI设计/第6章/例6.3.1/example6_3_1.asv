function varargout = example6_3_1(varargin)
% EXAMPLE6_3_1 M-file for example6_3_1.fig
%      EXAMPLE6_3_1, by itself, creates a new EXAMPLE6_3_1 or raises the existing
%      singleton*.
%
%      H = EXAMPLE6_3_1 returns the handle to a new EXAMPLE6_3_1 or the handle to
%      the existing singleton*.
%
%      EXAMPLE6_3_1('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in EXAMPLE6_3_1.M with the given input arguments.
%
%      EXAMPLE6_3_1('Property','Value',...) creates a new EXAMPLE6_3_1 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before example6_3_1_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to example6_3_1_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help example6_3_1

% Last Modified by GUIDE v2.5 20-Sep-2009 22:26:52

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @example6_3_1_OpeningFcn, ...
                   'gui_OutputFcn',  @example6_3_1_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before example6_3_1 is made visible.
function example6_3_1_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to example6_3_1 (see VARARGIN)

% Choose default command line output for example6_3_1
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes example6_3_1 wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = example6_3_1_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on selection change in listbox1.
function listbox1_Callback(hObject, eventdata, handles)
n=get(hObject,'value');
if n<4
    set(hObject,'uicontextmenu', '')
    if isequal(get(gcf,'SelectionType'),'open')
        set(hObject,'uicontextmenu','')
        str=get(hObject,'string');
        set(handles.text1,'string',str{n})
    end
else
    set(hObject,'uicontextmenu',handles.caidan1)
end

function listbox1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to listbox1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: listbox controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --------------------------------------------------------------------
function caidan1_Callback(hObject, eventdata, handles)
% hObject    handle to caidan1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function d_1_Callback(hObject, eventdata, handles)
set(handles.text1,'string','d1')

function d_2_Callback(hObject, eventdata, handles)
set(handles.text1,'string','d2')

function d_3_Callback(hObject, eventdata, handles)
set(handles.text1,'string','d3')